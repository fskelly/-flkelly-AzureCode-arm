on: [push]

env:
  AZURE_LOCATION: westeurope
  AZURE_RG: arm-actions

name: AZCliRGCheck_ARMDeploy

jobs:

  build_id:
    steps:
      - name: 'Set build id'
        id: build_id
        # add a step output `steps.build_id.outputs.id` as the unique id
        run: echo "::set-output name=id::$(date +%s)"
      - name: 'Cache .build-id'
        uses: actions/cache@v1
        with:
          # store the build id to github cache
          path: ${{ github.workspace }}/.build-id
          # use the build id to generate a completly unique cache
          key: ${{ runner.os }}-build-id-${{ github.head_ref }}-${{ github.sha }}-${{ steps.build_id.outputs.id }}
      - name: 'Save build id'
        # store the build id to a folder that we can later cache.
        run: |
          mkdir -p .build-id 
          echo $BUILD_ID > .build-id/id
        env:
          BUILD_ID: ${{ steps.build_id.outputs.id }}

  AZCli-CheckRGExists:
    runs-on: ubuntu-latest
    steps:
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Checkout
      uses: actions/checkout@v1

    - name: Azure CLI script file
      id: azcliscript
      uses: azure/CLI@v1
      env:
        rgName: arm-actions
        rgLocation: westeurope
      with:
        azcliversion: 2.0.72
        inlineScript: |
          if [ $(az group exists --name ${{ env.AZURE_RG }}) = false ]; then az group create --name ${{ env.AZURE_RG }} --location ${{ env.AZURE_LOCATION }}; fi

  build-and-deploy:
    needs: AZCli-CheckRGExists
    runs-on: ubuntu-latest
    steps:

    - name: Checkout Master 
      uses: actions/checkout@master

    - name: ARM Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # - name: arm Deploy
    #   uses: azure/arm-deploy@v1
    #   with:
    #     subscriptionId: ${{ secrets.SUB_ID }}
    #     resourceGroupName: arm-actions
    #     template: ./virtualMachine/arm/SimpleVM1/deploy.json
    #     parameters: ./virtualMachine/arm/SimpleVM1/parameters1.json

    - name: Deploy ARM template
      env:
        ARM_FILE: ./virtualMachine/arm/SimpleVM1/deploy1.json
        PARAM_FILE: ./virtualMachine/arm/SimpleVM1/parameters1.json
        LOCATION: {{steps.azcliscript.env.rglocation}}
        run: |
          az group deployment create --name ${{ steps.build_id.outputs.id }} --resource-group ${{ env.AZURE_RG }} --template-file ${ARM_FILE} --parameters @${PARAM_FILE}